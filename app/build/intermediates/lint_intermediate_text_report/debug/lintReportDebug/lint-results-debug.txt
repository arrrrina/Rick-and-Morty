C:\Users\USER\AndroidStudioProjects\project1\app\src\main\AndroidManifest.xml:25: Warning: Redundant label can be removed [RedundantLabel]
            android:label="@string/app_name"
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "RedundantLabel":
   When an activity does not have a label attribute, it will use the one from
   the application tag. Since the application has already specified the same
   label, the label on this activity can be omitted.

C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.9.0 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.9.0"
      ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.9.0 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.9.0"
      ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:2: Warning: A newer version of com.android.application than 8.9.0 is available: 8.9.2 [AndroidGradlePluginVersion]
agp = "8.9.0"
      ~~~~~~~

   Explanation for issues of type "AndroidGradlePluginVersion":
   This detector looks for usage of the Android Gradle Plugin where the
   version you are using is not the current stable release. Using older
   versions is fine, and there are cases where you deliberately want to stick
   with an older version. However, you may simply not be aware that a more
   recent version is available, and that is what this lint check helps find.

C:\Users\USER\AndroidStudioProjects\project1\app\build.gradle.kts:90: Warning: A newer version of androidx.room:room-compiler than 2.6.1 is available: 2.7.1 [GradleDependency]
    ksp("androidx.room:room-compiler:$roomVersion") // ksp
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:7: Warning: A newer version of androidx.core:core-ktx than 1.15.0 is available: 1.16.0 [GradleDependency]
coreKtx = "1.15.0"
          ~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:7: Warning: A newer version of androidx.core:core-ktx than 1.15.0 is available: 1.16.0 [GradleDependency]
coreKtx = "1.15.0"
          ~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:7: Warning: A newer version of androidx.core:core-ktx than 1.15.0 is available: 1.16.0 [GradleDependency]
coreKtx = "1.15.0"
          ~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:14: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.04.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:14: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.04.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:14: Warning: A newer version of androidx.compose:compose-bom than 2024.09.00 is available: 2025.04.01 [GradleDependency]
composeBom = "2024.09.00"
             ~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:15: Warning: A newer version of androidx.room:room-ktx than 2.6.1 is available: 2.7.1 [GradleDependency]
roomKtx = "2.6.1"
          ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:15: Warning: A newer version of androidx.room:room-ktx than 2.6.1 is available: 2.7.1 [GradleDependency]
roomKtx = "2.6.1"
          ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:15: Warning: A newer version of androidx.room:room-ktx than 2.6.1 is available: 2.7.1 [GradleDependency]
roomKtx = "2.6.1"
          ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:16: Warning: A newer version of androidx.room:room-runtime than 2.6.1 is available: 2.7.1 [GradleDependency]
roomRuntime = "2.6.1"
              ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:16: Warning: A newer version of androidx.room:room-runtime than 2.6.1 is available: 2.7.1 [GradleDependency]
roomRuntime = "2.6.1"
              ~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\gradle\libs.versions.toml:16: Warning: A newer version of androidx.room:room-runtime than 2.6.1 is available: 2.7.1 [GradleDependency]
roomRuntime = "2.6.1"
              ~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\strings.xml:2: Warning: Did you mean "project!" instead of "project1"? [Typos]
    <string name="app_name">project1</string>
                            ^

   Explanation for issues of type "Typos":
   This check looks through the string definitions, and if it finds any words
   that look like likely misspellings, they are flagged.

C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:3: Warning: The resource R.color.purple_200 appears to be unused [UnusedResources]
    <color name="purple_200">#FFBB86FC</color>
           ~~~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:4: Warning: The resource R.color.purple_500 appears to be unused [UnusedResources]
    <color name="purple_500">#FF6200EE</color>
           ~~~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:5: Warning: The resource R.color.purple_700 appears to be unused [UnusedResources]
    <color name="purple_700">#FF3700B3</color>
           ~~~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:6: Warning: The resource R.color.teal_200 appears to be unused [UnusedResources]
    <color name="teal_200">#FF03DAC5</color>
           ~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:7: Warning: The resource R.color.teal_700 appears to be unused [UnusedResources]
    <color name="teal_700">#FF018786</color>
           ~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:8: Warning: The resource R.color.black appears to be unused [UnusedResources]
    <color name="black">#FF000000</color>
           ~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\res\values\colors.xml:9: Warning: The resource R.color.white appears to be unused [UnusedResources]
    <color name="white">#FFFFFFFF</color>
           ~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

C:\Users\USER\AndroidStudioProjects\project1\app\src\main\java\com\example\project1\data\mapper\CharacterMapper.kt:13: Warning: Use the KTX extension function String.toUri instead? [UseKtx]
                image = Uri.parse(dto.image),
                        ~~~~~~~~~~~~~~~~~~~~
C:\Users\USER\AndroidStudioProjects\project1\app\src\main\java\com\example\project1\data\mapper\CharacterMapper.kt:21: Warning: Use the KTX extension function String.toUri instead? [UseKtx]
                image = Uri.parse(model.image),
                        ~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseKtx":
   The Android KTX libraries decorates the Android platform SDK as well as
   various libraries with more convenient extension functions available from
   Kotlin, allowing you to use default parameters, named parameters, and
   more.

   Available options:

   **remove-defaults** (default is true):
   Whether to skip arguments that match the defaults provided by the extension.

   Extensions often provide default values for some of the parameters. For example:
   ```kotlin
   fun Path.readLines(charset: Charset = Charsets.UTF_8): List<String> { return Files.readAllLines(this, charset) }
   ```
   This lint check will by default automatically omit parameters that match the default, so if your code was calling ```kotlin
   Files.readAllLines(file, Charset.UTF_8)
   ```
   lint would replace this with
   ```kotlin
   file.readLines()
   ```
   rather than
   ```kotlin
   file.readLines(Charset.UTF_8
   ```
   You can turn this behavior off using this option.

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UseKtx">
           <option name="remove-defaults" value="true" />
       </issue>
   </lint>
   ```

   **require-present** (default is true):
   Whether to only offer extensions already available.

   This option lets you only have lint suggest extension replacements if those extensions are already available on the class path (in other words, you're already depending on the library containing the extension method.)

   To configure this option, use a `lint.xml` file with an <option> like this:

   ```xml
   <lint>
       <issue id="UseKtx">
           <option name="require-present" value="true" />
       </issue>
   </lint>
   ```

C:\Users\USER\AndroidStudioProjects\project1\app\build.gradle.kts:90: Warning: Use version catalog instead [UseTomlInstead]
    ksp("androidx.room:room-compiler:$roomVersion") // ksp
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UseTomlInstead":
   If your project is using a libs.versions.toml file, you should place all
   Gradle dependencies in the TOML file. This lint check looks for version
   declarations outside of the TOML file and suggests moving them (and in the
   IDE, provides a quickfix to performing the operation automatically).

0 errors, 28 warnings
